---
// This final version adds session persistence for the background position to prevent
// a jarring refresh on page navigation.
---
<div id="stars-background" class="stars"></div>

<!-- Container for stationary, deep-background shimmer stars -->
<div id="shimmer-container" class="shimmer-container"></div>

<!-- Container for the foreground shooting stars -->
<div id="night-sky" class="night"></div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    
    // --- FEATURE 1: RANDOMIZE BACKGROUND (ONCE PER SESSION) ---
    const starsBg = document.getElementById('stars-background');
    if (starsBg) {
      // Check if a position is already stored for this session
      const storedPosition = sessionStorage.getItem('moonwakeBgPosition');

      if (storedPosition) {
        // If it exists, use it
        starsBg.style.backgroundPosition = storedPosition;
      } else {
        // If not, create a new random position and store it
        const newPosition = `${Math.random()*100}% ${Math.random()*100}%`;
        starsBg.style.backgroundPosition = newPosition;
        sessionStorage.setItem('moonwakeBgPosition', newPosition);
      }
    }

    // --- FEATURE 2: CREATE STATIONARY SHIMMERING STARS ---
    const shimmerContainer = document.getElementById('shimmer-container');
    if (shimmerContainer) {
        const NUM_SHIMMER_STARS = 75;
        for (let i = 0; i < NUM_SHIMMER_STARS; i++) {
            const star = document.createElement('div');
            star.className = 'shimmer-star';
            const size = Math.random() * 2 + 1;
            star.style.width = `${size}px`;
            star.style.height = `${size}px`;
            star.style.top = `${Math.random() * 100}%`;
            star.style.left = `${Math.random() * 100}%`;
            star.style.animationDuration = `${Math.random() * 5 + 3}s`;
            star.style.animationDelay = `${Math.random() * 5}s`;
            shimmerContainer.appendChild(star);
        }
    }

    // --- FEATURE 3: THE SHOOTING STAR LOGIC ---
    const nightSky = document.getElementById('night-sky');
    if (nightSky) {
        const NUM_SHOOTING_STARS = 3;
        const resetStar = (placer) => {
          placer.classList.remove('animate');
          void placer.offsetWidth;
          const rotator = placer.querySelector('.star-rotator');
          const star = placer.querySelector('.shooting_star');
          if (rotator && star) {
            const vw = window.innerWidth;
            const vh = window.innerHeight;
            placer.style.setProperty('--x', `${Math.random() * vw}px`);
            placer.style.setProperty('--y', `${Math.random() * vh}px`);
            rotator.style.setProperty('--angle', `${Math.random() * 360}deg`);
            const duration = Math.random() * 4000 + 3000;
            star.style.animationDuration = `${duration}ms`;
            placer.classList.add('animate');
          }
        };

        for (let i = 0; i < NUM_SHOOTING_STARS; i++) {
          const placer = document.createElement('div');
          placer.className = 'star-placer';
          const rotator = document.createElement('div');
          rotator.className = 'star-rotator';
          const star = document.createElement('div');
          star.className = 'shooting_star';
          rotator.appendChild(star);
          placer.appendChild(rotator);
          nightSky.appendChild(placer);
          star.addEventListener('animationend', (event) => {
            if (event.animationName === 'shooting-path') {
              const delay = Math.random() * 20000 + 10000;
              setTimeout(() => resetStar(placer), delay);
            }
          });
          setTimeout(() => resetStar(placer), Math.random() * 7000);
        }
    }
  });
</script>
